{
	"info": {
		"_postman_id": "98dfdcd6-3ae2-4abc-a21e-0b7491e5de57",
		"name": "feature",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21448774"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Добавление нового пользователя 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Анна Вотинова\",    \r\n    \"email\": \"user@testengineer.ru\"  \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Добавление нового пользователя 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Лев Толстой\",    \r\n    \"email\": \"user1@testengineer.ru\"    \r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Добавление нового пользователя 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Григорий Лепс\",    \r\n    \"email\": \"user2@testengineer.ru\"    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Добавление нового пользователя 4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Чебурашка Крокодилов\",    \r\n    \"email\": \"user3@testengineer.ru\"    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/users",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "FriendRequest",
			"item": [
				{
					"name": "Отправка запроса на дружбу 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/users/1/friends/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"1",
								"friends",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Отправка запроса на дружбу 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/users/3/friends/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"3",
								"friends",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Отмена пользователем своей заявки, если она в статусе PENDING",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{url}}/users/3/friends/2/cancel",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"3",
								"friends",
								"2",
								"cancel"
							]
						}
					},
					"response": []
				},
				{
					"name": "Повторная заявка на дружбу от пользователя 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/users/3/friends/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"3",
								"friends",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Подтверждение заявки со статусом PENDING",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{url}}/users/2/friends/1/confirm",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"2",
								"friends",
								"1",
								"confirm"
							]
						}
					},
					"response": []
				},
				{
					"name": "Отклонение заявки",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{url}}/users/2/friends/3/reject",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"2",
								"friends",
								"3",
								"reject"
							]
						}
					},
					"response": []
				},
				{
					"name": "Подтверждение заявки со статусом REJECTED",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{url}}/users/2/friends/3/confirm",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"2",
								"friends",
								"3",
								"confirm"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение друга по id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Chech friend with id 2\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/users/1/friends/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"1",
								"friends",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение друга по id в обратном порядке (друг запрашивает изначального реквестора)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Check gotten user id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/users/2/friends/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"2",
								"friends",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Отправка запроса на дружбу вторым пользователем",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/users/2/friends/4",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"2",
								"friends",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Подтверждение заявки 4м пользователем",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{url}}/users/4/friends/2/confirm",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"4",
								"friends",
								"2",
								"confirm"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение списка всех пользователей юзером 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Сheck size of the friendlist\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(3);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/users/2/friends",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"2",
								"friends"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Events",
			"item": [
				{
					"name": "Добавление категории",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Активный отдых\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/admin/categories",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Добавление события пользователем 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Check evenTid\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.eql(1);\r",
									"    pm.expect(jsonData.initiator.id).to.eql(2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"annotation\": \"Сплав на байдарках похож на полет.\",\r\n  \"category\": 1,\r\n  \"description\": \"Сплав на байдарках похож на полет. На спокойной воде — это парение. На бурной, порожистой — выполнение фигур высшего пилотажа. И то, и другое дарят чувство обновления, феерические эмоции, яркие впечатления.\",\r\n  \"eventDate\": \"2024-12-31 15:10:05\",\r\n  \"location\": {\r\n    \"lat\": 55.754167,\r\n    \"lon\": 37.62\r\n  },\r\n  \"paid\": true,\r\n  \"participantLimit\": 10,\r\n  \"requestModeration\": false,\r\n  \"title\": \"Сплав на байдарках\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/users/2/events",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"2",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Подтверждение события админом",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/events/1/publish",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"events",
								"1",
								"publish"
							]
						}
					},
					"response": []
				},
				{
					"name": "Отправка запроса на событие",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/users/3/requests?eventId=1",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"3",
								"requests"
							],
							"query": [
								{
									"key": "eventId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение событий с участием пользователя 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Check eventId\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[0].id).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/users/2/friends/3/events",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"2",
								"friends",
								"3",
								"events"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "Получение сведений о подписках",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(4);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/subscription",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"subscription"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение сведений о подписках со статусом CONFIRMED",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Сheck size of friendlist\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(3);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/subscription?statuses=CONFIRMED",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"subscription"
							],
							"query": [
								{
									"key": "users",
									"value": "0",
									"disabled": true
								},
								{
									"key": "friends",
									"value": "0",
									"disabled": true
								},
								{
									"key": "statuses",
									"value": "CONFIRMED"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение сведений о подписках по отправителям заявок",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/subscription?users=3",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"subscription"
							],
							"query": [
								{
									"key": "friends",
									"value": "",
									"disabled": true
								},
								{
									"key": "statuses",
									"value": null,
									"disabled": true
								},
								{
									"key": "users",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение статистики по френдам",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(3);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/subscription?friends=2",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"subscription"
							],
							"query": [
								{
									"key": "statuses",
									"value": null,
									"disabled": true
								},
								{
									"key": "users",
									"value": null,
									"disabled": true
								},
								{
									"key": "friends",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение статистики по реквестору и френду",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/subscription?users=3&friends=2",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"subscription"
							],
							"query": [
								{
									"key": "users",
									"value": "3"
								},
								{
									"key": "friends",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение сведений по всем параметрам, кроме статуса",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/subscription?users=3&friends=2&from=0&size=1",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"subscription"
							],
							"query": [
								{
									"key": "users",
									"value": "3"
								},
								{
									"key": "friends",
									"value": "2"
								},
								{
									"key": "statuses",
									"value": null,
									"disabled": true
								},
								{
									"key": "from",
									"value": "0"
								},
								{
									"key": "size",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение сведений по всем параметрам, кроме размера страницы",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Your test name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.length).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/subscription?users=3&friends=2&statuses=CONFIRMED&from=0",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"subscription"
							],
							"query": [
								{
									"key": "users",
									"value": "3"
								},
								{
									"key": "friends",
									"value": "2"
								},
								{
									"key": "statuses",
									"value": "CONFIRMED"
								},
								{
									"key": "from",
									"value": "0"
								},
								{
									"key": "size",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Validation",
			"item": [
				{
					"name": "Отправка заявки, которая уже подтверждена",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
									"    pm.response.to.be.badRequest;    \r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"const target = pm.response.json();\r",
									"\r",
									"pm.test(\"Ошибка должна содержать поля: status\", function () {\r",
									"    pm.expect(target).to.have.property('status');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/users/3/friends/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"3",
								"friends",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "4 отклоняет заявку 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{url}}/users/4/friends/2/reject",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"4",
								"friends",
								"2",
								"reject"
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function () {\r",
									"    pm.response.to.be.notFound;    \r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"const target = pm.response.json();\r",
									"\r",
									"pm.test(\"Ошибка должна содержать поля: status\", function () {\r",
									"    pm.expect(target).to.have.property('status');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{url}}/users/2/friends/4/cancel",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"2",
								"friends",
								"4",
								"cancel"
							]
						}
					},
					"response": []
				},
				{
					"name": "Попытка подтвердить уже подтвержденного подписчика",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function () {\r",
									"    pm.response.to.be.notFound;    \r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"const target = pm.response.json();\r",
									"\r",
									"pm.test(\"Ошибка должна содержать поля: status\", function () {\r",
									"    pm.expect(target).to.have.property('status');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{url}}/users/2/friends/3/confirm",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"2",
								"friends",
								"3",
								"confirm"
							]
						}
					},
					"response": []
				},
				{
					"name": "Попытка отклонить уже отклоненную заявку",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function () {\r",
									"    pm.response.to.be.notFound;    \r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"const target = pm.response.json();\r",
									"\r",
									"pm.test(\"Ошибка должна содержать поля: status\", function () {\r",
									"    pm.expect(target).to.have.property('status');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{url}}/users/4/friends/2/reject",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"4",
								"friends",
								"2",
								"reject"
							]
						}
					},
					"response": []
				},
				{
					"name": "Получение по айди юзера, который не друг",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ответ должен содержать код статуса 404 и данные в формате json\", function () {\r",
									"    pm.response.to.be.notFound;    \r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"const target = pm.response.json();\r",
									"\r",
									"pm.test(\"Ошибка должна содержать поля: status\", function () {\r",
									"    pm.expect(target).to.have.property('status');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/users/4/friends/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"users",
								"4",
								"friends",
								"2"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}